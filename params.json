{"name":"SDSM&T Robotics ODROIDs","tagline":"Documentation","body":"# Welcome\r\nThis page contains a collection of information about the ODROID images built for the SDSM&T Robotics Team.\r\n\r\n## Creating ARM installation media\r\n### Prerequisites\r\n1. An `armv7hl` machine running Fedora 21 or later\r\n2. Adequate disk space to create the image (at least 2GB, sometimes more)\r\n3. Network connection to the `smd-odroid` package repository\r\n4. A target Kickstart file\r\n5. The following packages must be installed:\r\n   - `anaconda`\r\n   - `lorax`\r\n\r\n### Specifications\r\nApplies to all kickstarts in this repo unless otherwise noted.\r\n\r\n1. No configured swap space\r\n2. Single `vfat` partition of size 31MB for boot.ini\r\n3. Single `ext4` partition for rootfs\r\n4. Default root password is `odroid`\r\n5. Default CPU governor is `performance` (where needed)\r\n6. Time synchronization is disabled\r\n\r\n### Creating the image\r\n```\r\nlivemedia-creator --ks=<path to kickstart> --image-name=<name of image file> --tmp=<path to output dir> --keep-image --make-disk --no-virt\r\n```\r\nFor example, to make a Fedora Minimal image for ODROID-XU:\r\n```\r\nlivemedia-creator --ks=odroid-xu-minimal-ks.cfg --image-name=f21-minimal-odroid-xu.img --tmp=/root --keep-image --make-disk --no-virt\r\n```\r\nThe resulting image will be ready to deploy when `livemedia-creator` completes.\r\n\r\n### Notes:\r\n- Unfortunately, you'll need `sudo` access to the machine generating the image.\r\n- You may see a message that says that there is `Not enough space in filesystems for the current software selection`. The kickstarts are designed to have *just enough* room to fit the packages in the list so we have smaller images to distribute. If the installation really does run out of disk space, you'll know it...\r\n- This process can take at least 20 minutes, depending on the system's disk I/O performance.\r\n- The console output is sporadic, so don't be surprised if you don't see any messages for 5-6 minutes straight.\r\n- If things go crazy and you see lots of backtraces, it is likely that you'll need to restart the system. Sometimes lingering processes prevent dismounts, and the script doesn't handle it very well.\r\n- `livemedia-creator` seems to have a bug if you don't set the `--resultdir` option. You can safely ignore the backtrace it generates at completion.\r\n\r\n## U-boot Fusing\r\n### Fusing eMMC\r\nInstall the odroid-{c,u,xu,xu3}-sd-fuser RPM from http://csc.mcs.sdsmt.edu/smd-odroid/fedora/linux/22/armhfp/\r\n\r\nRun the command (as root) `odroid-{c,u,xu,xu3}-emmc-fuser /dev/mmcblkX` to write the boot blob to the eMMC's boot partition. Note that you will need to be running a modern kernel which enumerates the boot partitions on an eMMC module. Unfortunately, the 3.4 kernel which is used on the ODROID-XU cannot do this. On the bright side, you don't need to be on an ARM machine at all to do this.\r\n\r\nIt should also be noted that you can't enumerate boot partitions unless you are accessing the device over a native MMC adapter. If you're unsure, check the device that the SD card is enumerated as. It should be `mmcblkX`, not `sdX`.\r\n\r\n### Fusing anything else (particularly SD)\r\nAs with eMMC, install the odroid-{c,u,xu,xu3}-sd-fuser RPM from http://csc.mcs.sdsmt.edu/smd-odroid/fedora/linux/22/armhfp/\r\n\r\nRun the command `odroid-xu-sd-fuser /dev/mmcblkX`. You can fuse a raw image file without root permissions, but you'll need root to fuse any actual hardware devices.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}